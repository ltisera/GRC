-- MySQL Script generated by MySQL Workbench
-- 08/26/18 19:25:41
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema usuario
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema usuario
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `usuario` DEFAULT CHARACTER SET utf8 ;
USE `usuario` ;

-- -----------------------------------------------------
-- Table `usuario`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `usuario`.`usuario` (
  `idUsuario` INT NOT NULL AUTO_INCREMENT,
  `ussr` VARCHAR(45) NOT NULL,
  `passwd` VARCHAR(45) NOT NULL,
  `mail` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idUsuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `usuario`.`Grupo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `usuario`.`Grupo` (
  `idGrupo` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `Descripcion` VARCHAR(45) NULL,
  PRIMARY KEY (`idGrupo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `usuario`.`usuario_has_Grupo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `usuario`.`usuario_has_Grupo` (
  `usuario_idUsuario` INT NOT NULL,
  `Grupo_idGrupo` INT NOT NULL,
  `tipoUsuario` ENUM('admin', 'usuario') NOT NULL,
  `Referenciar` TINYINT(1) NOT NULL,
  `Seleccionar` TINYINT(1) NOT NULL,
  `Compartir` TINYINT(1) NOT NULL,
  `Comentar` TINYINT(1) NOT NULL,
  `Resaltar` TINYINT(1) NOT NULL,
  `Invitar` TINYINT(1) NOT NULL,
  PRIMARY KEY (`usuario_idUsuario`, `Grupo_idGrupo`),
  INDEX `fk_usuario_has_Grupo_Grupo1_idx` (`Grupo_idGrupo` ASC),
  INDEX `fk_usuario_has_Grupo_usuario_idx` (`usuario_idUsuario` ASC),
  CONSTRAINT `fk_usuario_has_Grupo_usuario`
    FOREIGN KEY (`usuario_idUsuario`)
    REFERENCES `usuario`.`usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuario_has_Grupo_Grupo1`
    FOREIGN KEY (`Grupo_idGrupo`)
    REFERENCES `usuario`.`Grupo` (`idGrupo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `usuario`.`Documento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `usuario`.`Documento` (
  `idDocumento` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(45) NOT NULL,
  `fechaCreacion` DATE NULL,
  `Grupo_idGrupo` INT NULL,
  PRIMARY KEY (`idDocumento`),
  INDEX `fk_Documento_Grupo1_idx` (`Grupo_idGrupo` ASC),
  CONSTRAINT `fk_Documento_Grupo1`
    FOREIGN KEY (`Grupo_idGrupo`)
    REFERENCES `usuario`.`Grupo` (`idGrupo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `usuario`.`usuario_has_Documento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `usuario`.`usuario_has_Documento` (
  `usuario_idUsuario` INT NOT NULL,
  `Documento_idDocumento` INT NOT NULL,
  PRIMARY KEY (`usuario_idUsuario`, `Documento_idDocumento`),
  INDEX `fk_usuario_has_Documento_Documento1_idx` (`Documento_idDocumento` ASC),
  INDEX `fk_usuario_has_Documento_usuario1_idx` (`usuario_idUsuario` ASC),
  CONSTRAINT `fk_usuario_has_Documento_usuario1`
    FOREIGN KEY (`usuario_idUsuario`)
    REFERENCES `usuario`.`usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuario_has_Documento_Documento1`
    FOREIGN KEY (`Documento_idDocumento`)
    REFERENCES `usuario`.`Documento` (`idDocumento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `usuario`.`Documento_has_Grupo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `usuario`.`Documento_has_Grupo` (
  `Documento_idDocumento` INT NOT NULL,
  `Grupo_idGrupo` INT NOT NULL,
  PRIMARY KEY (`Documento_idDocumento`, `Grupo_idGrupo`),
  INDEX `fk_Documento_has_Grupo_Grupo1_idx` (`Grupo_idGrupo` ASC),
  INDEX `fk_Documento_has_Grupo_Documento1_idx` (`Documento_idDocumento` ASC),
  CONSTRAINT `fk_Documento_has_Grupo_Documento1`
    FOREIGN KEY (`Documento_idDocumento`)
    REFERENCES `usuario`.`Documento` (`idDocumento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Documento_has_Grupo_Grupo1`
    FOREIGN KEY (`Grupo_idGrupo`)
    REFERENCES `usuario`.`Grupo` (`idGrupo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `usuario`.`usuario_has_Documento1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `usuario`.`usuario_has_Documento1` (
  `usuario_idUsuario` INT NOT NULL,
  `Documento_idDocumento` INT NOT NULL,
  PRIMARY KEY (`usuario_idUsuario`, `Documento_idDocumento`),
  INDEX `fk_usuario_has_Documento1_Documento1_idx` (`Documento_idDocumento` ASC),
  INDEX `fk_usuario_has_Documento1_usuario1_idx` (`usuario_idUsuario` ASC),
  CONSTRAINT `fk_usuario_has_Documento1_usuario1`
    FOREIGN KEY (`usuario_idUsuario`)
    REFERENCES `usuario`.`usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuario_has_Documento1_Documento1`
    FOREIGN KEY (`Documento_idDocumento`)
    REFERENCES `usuario`.`Documento` (`idDocumento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
